<Window x:Class="LabWork42.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabWork42"
        mc:Ignorable="d"
        Title="Мультимедиа приложение" Height="600" Width="800">
    <TabControl>
        <!-- Вкладка графического редактора -->
        <TabItem Header="Графический редактор">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5">
                    <Button Content="Загрузить изображение" Click="LoadImage_Click" Margin="5"/>
                    <ComboBox x:Name="colorPicker" Width="100" Margin="5" SelectedIndex="0">
                        <ComboBoxItem>Black</ComboBoxItem>
                        <ComboBoxItem>Red</ComboBoxItem>
                        <ComboBoxItem>Green</ComboBoxItem>
                        <ComboBoxItem>Blue</ComboBoxItem>
                        <ComboBoxItem>Yellow</ComboBoxItem>
                    </ComboBox>
                    <ComboBox x:Name="sizePicker" Width="100" Margin="5" SelectedIndex="0">
                        <ComboBoxItem>1</ComboBoxItem>
                        <ComboBoxItem>3</ComboBoxItem>
                        <ComboBoxItem>5</ComboBoxItem>
                        <ComboBoxItem>10</ComboBoxItem>
                        <ComboBoxItem>20</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                
                <InkCanvas x:Name="inkCanvas" Grid.Row="1" Background="LightGray"/>
            </Grid>
        </TabItem>
        
        <!-- Вкладка карусели изображений -->
        <TabItem Header="Карусель изображений">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5">
                    <Button Content="Выбрать папку" Click="SelectFolder_Click" Margin="5"/>
                </StackPanel>
                
                <Image x:Name="carouselImage" Grid.Row="1" Stretch="Uniform"/>
            </Grid>
        </TabItem>
        
        <!-- Вкладка аудио/видео -->
        <TabItem Header="Аудио/Видео">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <MediaElement x:Name="videoPlayer" Grid.Row="0" LoadedBehavior="Play" Stretch="Uniform"/>
                
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <Button Content="Звук 1" Click="PlaySound1_Click" Margin="5" Width="80"/>
                    <Button Content="Звук 2" Click="PlaySound2_Click" Margin="5" Width="80"/>
                    <Button Content="Звук 3" Click="PlaySound3_Click" Margin="5" Width="80"/>
                </StackPanel>
            </Grid>
        </TabItem>
        
        <!-- Вкладка медиапроигрывателя -->
        <TabItem Header="Медиапроигрыватель">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <MediaElement x:Name="mediaPlayer" Grid.Row="0" Stretch="Uniform"/>
                
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <Button Content="Выбрать файл" Click="SelectMediaFile_Click" Margin="5" Width="100"/>
                    <Button Content="Play" Click="PlayMedia_Click" Margin="5" Width="60"/>
                    <Button Content="Pause" Click="PauseMedia_Click" Margin="5" Width="60"/>
                    <Button Content="Stop" Click="StopMedia_Click" Margin="5" Width="60"/>
                    <TextBlock x:Name="timeText" Margin="5" VerticalAlignment="Center" Width="150"/>
                </StackPanel>
                
                <ListBox x:Name="playlistBox" Grid.Row="2" Height="100" Margin="5" 
                         SelectionChanged="PlaylistBox_SelectionChanged"/>
            </Grid>
        </TabItem>
    </TabControl>
</Window>




using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Media;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Ink;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using Microsoft.Win32;

namespace LabWork42
{
    public partial class MainWindow : Window
    {
        private List<string> imageFiles = new List<string>();
        private int currentImageIndex = 0;
        private System.Windows.Threading.DispatcherTimer carouselTimer;
        private List<string> playlist = new List<string>();
        
        public MainWindow()
        {
            InitializeComponent();
            
            // Настройка карусели
            carouselTimer = new System.Windows.Threading.DispatcherTimer();
            carouselTimer.Interval = TimeSpan.FromSeconds(0.3);
            carouselTimer.Tick += CarouselTimer_Tick;
            
            // Настройка медиапроигрывателя
            mediaPlayer.MediaOpened += MediaPlayer_MediaOpened;
            mediaPlayer.MediaEnded += MediaPlayer_MediaEnded;
            
            // Настройка InkCanvas
            inkCanvas.DefaultDrawingAttributes.Color = Colors.Black;
            inkCanvas.DefaultDrawingAttributes.Width = 1;
            inkCanvas.DefaultDrawingAttributes.Height = 1;
            
            // Загрузка тестового видео
            videoPlayer.Source = new Uri("http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4");
        }
        
        // Графический редактор
        private void LoadImage_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Filter = "Image files (*.jpg, *.jpeg, *.png)|*.jpg;*.jpeg;*.png|All files (*.*)|*.*";
            
            if (openFileDialog.ShowDialog() == true)
            {
                inkCanvas.Strokes.Clear();
                BitmapImage bitmap = new BitmapImage(new Uri(openFileDialog.FileName));
                inkCanvas.Background = new ImageBrush(bitmap);
            }
        }
        
        private void colorPicker_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (colorPicker.SelectedItem != null)
            {
                string colorName = (colorPicker.SelectedItem as ComboBoxItem).Content.ToString();
                Color color = (Color)ColorConverter.ConvertFromString(colorName);
                inkCanvas.DefaultDrawingAttributes.Color = color;
            }
        }
        
        private void sizePicker_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (sizePicker.SelectedItem != null)
            {
                double size = double.Parse((sizePicker.SelectedItem as ComboBoxItem).Content.ToString());
                inkCanvas.DefaultDrawingAttributes.Width = size;
                inkCanvas.DefaultDrawingAttributes.Height = size;
            }
        }
        
        // Карусель изображений
        private void SelectFolder_Click(object sender, RoutedEventArgs e)
        {
            var dialog = new System.Windows.Forms.FolderBrowserDialog();
            if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                imageFiles = Directory.GetFiles(dialog.SelectedPath, "*.jpg")
                    .Concat(Directory.GetFiles(dialog.SelectedPath, "*.jpeg"))
                    .Concat(Directory.GetFiles(dialog.SelectedPath, "*.png"))
                    .ToList();
                
                if (imageFiles.Count > 0)
                {
                    currentImageIndex = 0;
                    ShowCurrentImage();
                    carouselTimer.Start();
                }
                else
                {
                    MessageBox.Show("В выбранной папке нет изображений.");
                }
            }
        }
        
        private void CarouselTimer_Tick(object sender, EventArgs e)
        {
            currentImageIndex = (currentImageIndex + 1) % imageFiles.Count;
            ShowCurrentImage();
        }
        
        private void ShowCurrentImage()
        {
            if (currentImageIndex >= 0 && currentImageIndex < imageFiles.Count)
            {
                BitmapImage bitmap = new BitmapImage(new Uri(imageFiles[currentImageIndex]));
                carouselImage.Source = bitmap;
            }
        }
        
        // Аудио/Видео
        private void PlaySound1_Click(object sender, RoutedEventArgs e)
        {
            SystemSounds.Beep.Play();
        }
        
        private void PlaySound2_Click(object sender, RoutedEventArgs e)
        {
            SystemSounds.Asterisk.Play();
        }
        
        private void PlaySound3_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Filter = "Audio files (*.wav, *.mp3)|*.wav;*.mp3|All files (*.*)|*.*";
            
            if (openFileDialog.ShowDialog() == true)
            {
                var player = new MediaPlayer();
                player.Open(new Uri(openFileDialog.FileName));
                player.Play();
            }
        }
        
        // Медиапроигрыватель
        private void SelectMediaFile_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Multiselect = true;
            openFileDialog.Filter = "Media files (*.mp3, *.mp4, *.wmv, *.wav)|*.mp3;*.mp4;*.wmv;*.wav|All files (*.*)|*.*";
            
            if (openFileDialog.ShowDialog() == true)
            {
                playlist.Clear();
                playlist.AddRange(openFileDialog.FileNames);
                playlistBox.ItemsSource = null;
                playlistBox.ItemsSource = playlist.Select(Path.GetFileName);
                
                if (playlist.Count > 0)
                {
                    playlistBox.SelectedIndex = 0;
                }
            }
        }
        
        private void PlayMedia_Click(object sender, RoutedEventArgs e)
        {
            if (mediaPlayer.Source != null)
            {
                mediaPlayer.Play();
            }
        }
        
        private void PauseMedia_Click(object sender, RoutedEventArgs e)
        {
            mediaPlayer.Pause();
        }
        
        private void StopMedia_Click(object sender, RoutedEventArgs e)
        {
            mediaPlayer.Stop();
        }
        
        private void MediaPlayer_MediaOpened(object sender, RoutedEventArgs e)
        {
            UpdateTimeDisplay();
            
            // Запускаем таймер для обновления времени
            System.Windows.Threading.DispatcherTimer timer = new System.Windows.Threading.DispatcherTimer();
            timer.Interval = TimeSpan.FromSeconds(1);
            timer.Tick += (s, args) => UpdateTimeDisplay();
            timer.Start();
        }
        
        private void MediaPlayer_MediaEnded(object sender, RoutedEventArgs e)
        {
            PlayNextMedia();
        }
        
        private void PlaylistBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (playlistBox.SelectedIndex >= 0 && playlistBox.SelectedIndex < playlist.Count)
            {
                mediaPlayer.Source = new Uri(playlist[playlistBox.SelectedIndex]);
                mediaPlayer.Play();
            }
        }
        
        private void UpdateTimeDisplay()
        {
            if (mediaPlayer.NaturalDuration.HasTimeSpan)
            {
                timeText.Text = $"{mediaPlayer.Position.ToString(@"hh\:mm\:ss")} / {mediaPlayer.NaturalDuration.TimeSpan.ToString(@"hh\:mm\:ss")}";
            }
        }
        
        private void PlayNextMedia()
        {
            if (playlist.Count == 0) return;
            
            int nextIndex = (playlistBox.SelectedIndex + 1) % playlist.Count;
            playlistBox.SelectedIndex = nextIndex;
        }
    }
}
